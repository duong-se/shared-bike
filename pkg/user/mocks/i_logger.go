// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ILogger is an autogenerated mock type for the ILogger type
type ILogger struct {
	mock.Mock
}

// Error provides a mock function with given fields: i
func (_m *ILogger) Error(i ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, i...)
	_m.Called(_ca...)
}

// Errorf provides a mock function with given fields: format, args
func (_m *ILogger) Errorf(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Info provides a mock function with given fields: i
func (_m *ILogger) Info(i ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, i...)
	_m.Called(_ca...)
}

// Infof provides a mock function with given fields: format, args
func (_m *ILogger) Infof(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

type mockConstructorTestingTNewILogger interface {
	mock.TestingT
	Cleanup(func())
}

// NewILogger creates a new instance of ILogger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewILogger(t mockConstructorTestingTNewILogger) *ILogger {
	mock := &ILogger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
