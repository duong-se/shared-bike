name: Pull Request

on:
  pull_request:
    types: ['opened', 'synchronize']

jobs:
  frontend_pull_request:
    name: Frontend Pull Request
    runs-on: ubuntu-latest
    env:
      working-directory: ./frontend

    steps:
      - name: Setup Node Environment
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Checks out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: {{ github.event.pull_request.head.ref }}

      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            build-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Unit Tests
        run: TZ=UTC yarn test:coverage

      - name: Build
        run: yarn build

  api_pull_request:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./api

    steps:
      - name: Setup go environment
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: {{ github.event.pull_request.head.ref }}

      - name: Test
        run: go test ./...
